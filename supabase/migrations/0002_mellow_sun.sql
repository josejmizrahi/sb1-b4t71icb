/*
  # Verification System Setup

  1. New Tables
    - `verification_requests`: Track user verification requests
      - `id` (bigint, identity)
      - `profile_id` (uuid, references profiles)
      - `status` (text)
      - `verification_type` (text)
      - `submitted_at` (timestamptz)
      - `reviewed_at` (timestamptz)
      - `reviewed_by` (uuid)
      - `documents_url` (text[])
      - `notes` (text)
      - `rabbinical_reference` (text)

  2. Security
    - Enable RLS
    - Add policies for verification request access
    - Set up verification workflow triggers

  3. Triggers
    - Update profile status on verification approval
*/

CREATE TABLE verification_requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    profile_id UUID REFERENCES profiles(id),
    status TEXT DEFAULT 'pending',
    verification_type TEXT NOT NULL,
    submitted_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    reviewed_at TIMESTAMP WITH TIME ZONE,
    reviewed_by UUID REFERENCES profiles(id),
    documents_url TEXT[],
    notes TEXT,
    rabbinical_reference TEXT
);

-- Enable RLS
ALTER TABLE verification_requests ENABLE ROW LEVEL SECURITY;

-- Verification requests policies
CREATE POLICY "Users can view their own verification requests"
    ON verification_requests FOR SELECT
    USING (profile_id = auth.uid());

CREATE POLICY "Users can create their own verification requests"
    ON verification_requests FOR INSERT
    WITH CHECK (profile_id = auth.uid());

-- Function to handle verification approval
CREATE OR REPLACE FUNCTION handle_verification_approval()
RETURNS TRIGGER
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
    IF NEW.status = 'approved' AND OLD.status = 'pending' THEN
        UPDATE profiles 
        SET 
            verified = true,
            status = 'active'
        WHERE id = NEW.profile_id;
    END IF;
    RETURN NEW;
END;
$$;

-- Trigger for verification approval
CREATE TRIGGER on_verification_approved
    AFTER UPDATE ON verification_requests
    FOR EACH ROW
    EXECUTE FUNCTION handle_verification_approval();